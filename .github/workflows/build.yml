name: build

on:
  push:
    paths-ignore:
    - '.vscode/**'
    - '.editorconfig'
    - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PACKAGE_VERSION: 2.1.${{ github.run_number }}
      SF_AUTOUPDATE_DISABLE: true
      SF_HIDE_RELEASE_NOTES: true
      SF_HIDE_RELEASE_NOTES_FOOTER: true
      SF_SKIP_VERSION_CHECK: true
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        java-package: jdk
        distribution: temurin
    - name: Cache binary dependencies
      uses: actions/cache@v3
      with:
        path: |
          .tmp/*
          .tmp/cloc.pl
          !.tmp/*.gz
          !.tmp/*.xz
          !.tmp/*.zip
        key: bin-${{ hashFiles('.build/versions.env') }}
    - name: Cache Ivy dependencies
      uses: actions/cache@v3
      with:
        path: ivy
        key: ivy-${{hashFiles('ivy.xml')}}
    - name: Prepare build environment
      shell: bash
      run: |
        source .build/setenv.sh
        # Only way to share environment variables between steps...
        echo "ANT_HOME=$ANT_HOME" >> $GITHUB_ENV
        echo "PMD_HOME=$PMD_HOME" >> $GITHUB_ENV
        echo "$ANT_HOME/bin" >> $GITHUB_PATH

        mkdir -p ivy
        if [ ! -f ivy/ivy.jar ]; then wget -nv -O ivy/ivy.jar https://repo1.maven.org/maven2/org/apache/ivy/ivy/$_IVY_VERSION/ivy-$_IVY_VERSION.jar; fi
        java -jar ivy/ivy.jar -retrieve "ivy/lib/[conf]/[artifact].[ext]" -confs build
    - name: Build
      shell: bash
      run: |
        ant -noclasspath -nouserlib -noinput -logger org.apache.tools.ant.listener.AnsiColorLogger -Dverbosity=debug -f build.xml release
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: |
          tmp/out/bin/**.*
    - name: Archive logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: logs
        path: |
          build.log
        retention-days: 2
    - name: Archive results
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: results
        path: |
          tmp/junit-results
          tmp/*-results.html
          tmp/*-results.xml
        retention-days: 8
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        directory: ./tmp/
        file: jacoco-results.xml
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Create release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        draft: true
        files: |
          tmp/out/bin/**.*
